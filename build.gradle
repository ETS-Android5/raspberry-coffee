plugins {
  id 'java'
  id 'scala'
  id 'idea'
  id 'maven'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
}

compileJava.options.encoding = 'ISO-8859-1'
compileJava.options.compilerArgs += ["-Xlint:unchecked"]

group = 'oliv.raspi.coffee'
version = '1.0'

// sourceCompatibility = 1.8
// targetCompatibility = 1.8

tasks.withType(JavaCompile) {
  if (JavaVersion.current() != project.targetCompatibility) {
//    throw new GradleException(
    println "+------ Warning: Java version (JAVA_HOME) possible mismatch -----\n" +
            "| In task $name ($project.name), the java version used ${JavaVersion.current()} is not the expected version ${project.targetCompatibility}.\n" +
            "+----------------------------------------------------------------"
//    )
  } else {
    println ">> From task $name (in $project.name), using java version ${JavaVersion.current()} "
  }
  options.encoding = 'UTF-8'
}

dependencies {
  compile project(':common-utils')
  compile project(':common-utils-swing')
  compile project(':http-tiny-server')
  compile project(':Adafruit.IO.REST')
  compile project(':SevenSegDisplay')
  compile project(':AlaMode.101')
  compile project(':I2C.SPI')
  compile project(':WeatherStation')
  compile project(':ADC')
  compile project(':ADC-benchmark')
  compile project(':Arduino.RaspberryPI')
  compile project(':DAC')
  compile project(':GPIO.01')
  compile project(':PhoneKeyboard3x4')
  compile project(':HC-SR04')
  compile project(':PIR')
  compile project(':PI4J.email')
  compile project(':Relay')
  compile project(':RESTRelay')
  compile project(':FONA')
  compile project(':RasPISamples')
  compile project(':LelandOilDetector')
  compile project(':OtherJVM.languages')
  compile project(':Serial.IO')
  compile project(':SerialRxTx')
  compile project(':MindWave')
  compile project(':GPS.read')
  compile project(':RMI.sample')
  compile project(':NMEA.multiplexer')
  compile project(':NMEA.mux.extensions')
//  compile project(':NMEA.mux.WebUI')
  compile project(':NMEA.mux.WebUI:full.server')
  compile project(':NMEA.mux.WebUI:minimal.mux')
  compile project(':NMEA.mux.WebUI:full.server.extended')
  compile project(':NMEA.mux.WebUI:full.server.extended.v2')
  compile project(':NMEA.mux.WebUI:head.up')
  compile project(':RESTCam')
  compile project(':RESTNavServer')
  compile project(':RESTTideEngine')
  compile project(':RESTNauticalAlmanac')
  compile project(':RESTImageProcessor')
  compile project(':JavaSoundDemo')
  compile project(':HanoiTower')
  compile project(':Project.Trunk:PlantWateringSystem')
  compile project(':Project.Trunk:ADCs.Servos.JoySticks')
  compile project(':Project.Trunk:Motors')
  compile project(':Project.Trunk:SteppersPlayground')
  compile project(':Project.Trunk:Weather.Station.Implementation')
  compile project(':Project.Trunk:RasPiRadar')
  compile project(':Project.Trunk:REST.clients:TCP.Watch.01')
  compile project(':Project.Trunk:REST.clients:REST.assembler')
  compile project(':Project.Trunk:REST.clients:REST.assembler:springboot-sensors')
  compile project(':Project.Trunk:PolarSmoother')
  compile project(':Project.Trunk:Deviation.Tool')
  compile project(':TensorFlow')
  compile project(':Processing')
  compile project(':Bluetooth')
  compile project(':Joystick')
  compile project(':JupyterNotebooks:deep.learning.crash.course')
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "http://lediouris.net/maven2" }
  maven { url "http://www.datanucleus.org/downloads/maven2" }
  maven { url "https://oss.sonatype.org/content/groups/public" }
}
