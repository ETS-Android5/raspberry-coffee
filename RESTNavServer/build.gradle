plugins {
  id 'java'
  id 'maven'
  id 'idea'
  id 'com.github.johnrengelman.shadow' // version '4.0.2'
  id "com.eriwen.gradle.js" version "2.14.1"
}

group = 'oliv.raspi.coffee'
version = '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
  if (JavaVersion.current() != project.targetCompatibility) {
    throw new GradleException(
            "+---- Please change your Java version (JAVA_HOME) to move on ----\n" +
            "| The java version used ${JavaVersion.current()} is not the expected version ${project.targetCompatibility}.\n" +
            "+----------------------------------------------------------------"
    )
  } else {
    println ">> From task $name, using java version ${JavaVersion.current()} "
  }
  options.encoding = 'UTF-8'
}

//sourceSets {
//  main {
//    java {
//      srcDir 'src/java'
//    }
//    resources {
//      srcDir 'src/resources'
//    }
//  }
//  test {
//    java {
//      srcDir 'tests/java'
//    }
//  }
//}

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "https://oss.sonatype.org/content/groups/public" }
  maven { url "http://www.datanucleus.org/downloads/maven2" }
  maven { url "http://lediouris.net/maven2" }
}

dependencies {
  compile 'com.google.code.gson:gson:2.8.0'
  compile project (':RESTNauticalAlmanac')
  compile project (':RESTTideEngine')
  compile project (':RESTImageProcessor')
  compile project (':RESTRouting')
  compile project (':NMEA.multiplexer')
  compile project (':NMEA.mux.extensions')
  compile project (':Project.Trunk:SunFlower')
}

import com.eriwen.gradle.js.tasks.MinifyJsTask

task minifyJS

minifyJS.doLast {
  fileTree(dir: 'web', include: ['js/*.js', 'widgets/*.js'], exclude: ['minjs/*']).eachWithIndex { file, index ->
    println ">>> Processing " + file.absoluteFile
    def dynamicTask = "minify$index"
    task "${dynamicTask}" (type: MinifyJsTask) {
      source = file.absolutePath;
//    dest = "${buildDir}/min.${file.name}"
      dest = "web/minjs/${file.name}"
      closure.compilationLevel='SIMPLE_OPTIMIZATIONS'
      closure {
        warningLevel = "QUIET"
        compilerOptions.languageIn = "ECMASCRIPT6"
        compilerOptions.languageOut = "ECMASCRIPT5"
      }
    }
    tasks."$dynamicTask".execute()
  }
}

shadowJar {
  zip64 true
}

task finalize
finalize.doLast {
  println('Minifying JS')
  minifyJS.execute()
}

// shadowJar.finalizedBy(finalize)
